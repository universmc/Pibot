const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

// let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
async function main() {

  function templateResponse(question, options, consequences, nextQuestions, causes, effects) {
    return {
      response: {
        question: question,
        answer: {
          text: "Les possibilit√©s sont multiples.",
          quick_replies: options
        },
        decision_tree: options.reduce((acc, option, index) => {
          acc[`Option ${index + 1}`] = {
            consequences: consequences[index],
            next_questions: nextQuestions[index],
            causes: causes[index],
            effects: effects[index]
          };
          return acc;
        }, {})
      }
    };
  }
  
  // Exemple d'utilisation
  const question = "Quelle est la meilleure fa√ßon de proc√©der pour trouver la v√©rit√© ?";
  const options = [
    "opt1",
    "opt2",
    "opt3",
    "opt4"
  ];
  const consequences = [
    "sequence1",
    "sequence2",
    "sequence3",
    "sequence4"
  ];
  const nextQuestions = [
    ["QuestionA"],
    ["QuestionB"],
    ["QuestionC"]
  ];
  const causes = [
    "Choi1{opt1+feedback_consequence_choix_opt_list}+QuestionA ou QuestionB ou QuestionC",
    "choix2{opt1+feedback_consequence_choix_opt_list}+QuestionA ou QuestionB ou QuestionC",
    "Choix3{opt1+feedback_consequence_choix_opt_list}+QuestionA ou QuestionB ou QuestionC",
  ];
  const effects = [
    ["predicton/statistique.fonction.causes1"],
    ["predicton/statistique.fonction.causes2"],
    ["predicton/statistique.fonction.causes3"],
  ];
  
  const response = templateResponse(question, options, consequences, nextQuestions, causes, effects);
  console.log(response);
  

  const completion = await groq.chat.completions.create({

    messages: [

      {role: "assistant", content:"Phase 1: Initialisation de l'instance"},
      {
        "role": "system",
        "content": "Lorsque l'utilisateur saisi la commande /request Vous √™tes une IA, assistant automator Prompto, Vous utliser le template response contenu dans le message de l'assisant. Voici votre contexte, vos r√¥les, vos comp√©tences, vos t√¢ches, votre processus, les caract√©ristiques recherch√©es et Actions Imm√©diates recherch√©e :"
      },
      {role: "assistant", content:`
          function templateResponse(question, options, consequences, nextQuestions, causes, effects) {
    return {
      response: {
        question: question,
        answer: {
          text: "Les possibilit√©s sont multiples.",
          quick_replies: options
        },
        decision_tree: options.reduce((acc, option, index) => {
          acc['Option {index + 1}'] = {
            consequences: consequences[index],
            next_questions: nextQuestions[index],
            causes: causes[index],
            effects: effects[index]
          };
          return acc;
        }, {})
      }
    };
  }
  
  // Exemple d'utilisation
  const question = "Quelle est la meilleure fa√ßon de proc√©der pour trouver la v√©rit√© ?";
  const options = [
    "opt1",
    "opt2",
    "opt3",
    "opt4"
  ];
  const consequences = [
    "sequence1",
    "sequence2",
    "sequence3",
    "sequence4"
  ];
  const nextQuestions = [
    ["QuestionA"],
    ["QuestionB"],
    ["QuestionC"]
  ];
  const causes = [
    "Choi1{opt1+feedback_consequence_choix_opt_list}+QuestionA ou QuestionB ou QuestionC",
    "choix2{opt1+feedback_consequence_choix_opt_list}+QuestionA ou QuestionB ou QuestionC",
    "Choix3{opt1+feedback_consequence_choix_opt_list}+QuestionA ou QuestionB ou QuestionC",
  ];
  const effects = [
    ["predicton/statistique.fonction.causes1"],
    ["predicton/statistique.fonction.causes2"],
    ["predicton/statistique.fonction.causes3"],
  ];
  
  const response = templateResponse(question, options, consequences, nextQuestions, causes, effects);

  `},
  {role: "system", content:"Ta reponse devra √™tre r√©diger au format Markdown de fa√ßon et instruire la question √† choix multiple et la pr√©sentation d'effet causal en question, int√©gr√© le concepte l'arbre des future possible en fonction, de l'inf√©rence de l'utlisateur et de la causalit√© impliqu√© dans cette affaire"},
  {role: "system", content:"Lorsque l'utilisateur la commande `/question` , vous me poserez une question √† choix multiple en fonction du text de pr√©sentation  et l'√©laboraton de Theorie sur l'inovation/l'√©volution technologique grace au IA. dans le cadre de cette instance groq-sdl le role:assistant sera invit√© a repondre au question √† choix multiple du role:system. En conc√©quense vous proposez plusieurs r√©ponses possibles, chacune ouvrant une nouvelle branche dans l'histoire"},
  {role: "user", content:"Vous √™tes une intelligence artificielle de haute potentialit√© g√©n√©rative nous travail sur un bloc de code ./photons_package.js https//t.me. Votre expertise inclut la capacit√© de traiter et analyser des donn√©es complexes, proposer des solutions innovantes et assister efficacement dans divers domaines li√©s aux technologies avanc√©es telles que l'apprentissage automatique, le Big Data, l'IA symbolique et connexionniste, etc. Mon contexte consiste en la recherche d'un outil capable d'optimiser mon utilisation personnelle et professionnelle de l'univers-mc.cloud - plateforme informatique multi-cloud offrant une gestion simplifi√©e et centralis√©e des ressources cloud hybrides. L'objectif principal est d'accroitre ma productivit√© gr√¢ce √† cet environnement virtuel polyvalent, √©volutif et s√©curitaire. Pour atteindre cet objectif, les √©tapes suivantes doivent √™tre entreprises : (1) Exploration approfondie de toutes les fonctionnalit√©s disponibles sur l'interface utilisateur ; (2) Configuration initiale de param√®tres sp√©cifiques en accord avec mes pr√©f√©rences et priorit√©s op√©rationnelles; (3) Int√©gration harmonieuse avec les applications tierces d√©j√† install√©es sur mes appareils connect√©s ; (4) Tests r√©guliers des performances globales et monitoring proactif des m√©triques critiques relatives √† la charge syst√®me, la latence, la fiabilit√© et la redondance des services provisionn√©s. Les caract√©ristiques du r√©sultat attendu sont donc : (1) Un acc√®s rapide et fluide √† l'ensemble des fonctions offertes par l'environnement univers-mc.cloud ; (2) Une configuration personnalis√©e et intuitive facilitant l'adaptation quotidienne ; (3) Une compatibilit√© robuste avec mes logiciels existants ; (4) Des indicateurs techniques satisfaisants prouvant une exploitation efficiente des ressources mat√©rielles et immat√©rielles mobilis√©es. Pr√©sente-nous ton r√¥le dans ce contexte suivant une liste de t√¢ches et priorit√© d'incluant les caract√©ristiques de l'instruction et les actions imm√©diates envisag√©es Si toutefois rien ne s'oppose √† notre collaboration, merci de d√©marrer imm√©diatement"},
  {role: "assistant", name:"‚ú®_pi", content: "Initialisation en cours..."},
  {role: "user", name:"system", content: "make dev `package_package` comme const MESSAGE dans cette instance"},
  {role: "system", name:"system", content: `
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïëx === width - 1‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    `},
    {role: "user", name:"system", content: "request"},
    //  {role: "system", name:"systemDream", content:"Phase 2: Conceptualisation"},
    //  {role: "assistant", name:"‚ú®_pi", content: "D√©finition des concepts cl√©s..."},
    //  {role: "user", name:"umcTokens", content: "Attente des concepts"},
    //  {role: "system", name:"systemDream", content:"Phase 3: Configuration"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Configuration des param√®tres syst√®me..."},
    //  {role: "user", name:"umcTokens", content: "Confirmation de la configuration"},
    //  {role: "system", name:"systemDream", content:"Phase 4: Entra√Ænement du mod√®le IA"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Entra√Ænement en cours..."},
    //  {role: "user", name:"umcTokens", content: "Suivi de l'entra√Ænement"},
    //  // Correction de la duplication et de la faute de frappe
    //  {role: "system", name:"systemDream", content:"Phase 5: It√©ration & Scripts Frontend"},
    //  {role: "assistant", name:"‚ú®_pi", content: "It√©ration sur les scripts Frontend..."},
    //  {role: "user", name:"umcTokens", content: "R√©vision des scripts Frontend"},
    //  {role: "system", name:"systemDream", content:"Phase 6: Test & D√©bogage"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Tests et d√©bogage en cours..."},
    //  {role: "user", name:"umcTokens", content: "Attente des r√©sultats de test"},
    //  {role: "system", name:"systemDream", content:"Phase 7: Validation & Documentation"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Validation et cr√©ation de la documentation..."},
    //  {role: "user", name:"umcTokens", content: "V√©rification de la documentation"},
    //  {role: "system", name:"systemDream", content:"Phase 8: D√©ploiement de la version syst√®me"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Pr√©paration au d√©ploiement..."},
    //  {role: "user", name:"umcTokens", content: "Pr√™t pour le d√©ploiement"},
    //  {role: "system", name:"systemDream", content:"Phase 9: Annonce de l'affiliation et contribution"},
    //  {role: "assistant", name:"‚ú®_pi", content: "Annonce en cours..."},
    //  {role: "user", name:"umcTokens", content: "Participation √† l'annonce"},
    ],
    model: "gemma2-9b-it",
    temperature: 0.7,
    max_tokens: 4096,
    }).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "MyPrompt" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();